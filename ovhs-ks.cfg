#version=RHEL9

# https://docs.centos.org/en-US/centos/install-guide/Kickstart2/

# System authorization information
authselect --enableshadow --passalgo=sha512

# Perform kickstart installation in text mode
text

# Use CDROM / network installation media
# when using http://isoredirect.centos.org/centos/8-stream/isos/x86_64/CentOS-Stream-8-x86_64-latest-dvd1.iso:
#cdrom
# when using http://isoredirect.centos.org/centos/8/isos/x86_64/CentOS-8.5.2111-x86_64-boot.iso:
#url --mirrorlist="http://mirrorlist.centos.org/?release=$releasever&arch=x86_64&repo=BaseOS&infra=$infra"
# when using http://isoredirect.centos.org/centos/8-stream/isos/x86_64/CentOS-Stream-8-x86_64-latest-boot.iso:
url --mirrorlist="http://mirrorlist.centos.org/?release=$releasever-stream&arch=$basearch&repo=BaseOS&infra=$infra"

%addon com_redhat_kdump --disable
%end

# Run the Setup Agent on first boot
firstboot --enable

# Do not configure the X Window System
skipx

# Keyboard layouts
keyboard --vckeymap=de --xlayouts='de (nodeadkeys)'

# System language
#lang de_DE.UTF-8
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --onboot=on --ipv6=auto --activate
network --hostname=ovhs.fritz.box

# Root password
# you can use "python -c 'import crypt; print(crypt.crypt("My Password", crypt.mksalt()))'" to create the hash on a linux command line
# the below example reflects the password "ovhs"
rootpw --iscrypted $6$4DVXePa2eKw4pukd$eS1jWHtxhROlAn0TWrzTirngzT4JHin6eFk1YQGBDGTVy3yG610bMyqoUgNTI6h.btAtrqcz4nt6Zu6qKs97r1

# System services
services --enabled="chronyd"

# System timezone
timezone Europe/Berlin --utc --ntpserver 0.de.pool.ntp.org --ntpserver 1.de.pool.ntp.org --ntpserver 2.de.pool.ntp.org --ntpserver 3.de.pool.ntp.org

### SINGLE HD INSTALL:
# Ignore all disks except the intended ones
#ignoredisk --only-use=sda
# Partition clearing information
#clearpart --all --initlabel --drives=sda
## Disk partitioning information
# For BIOS booting only
#part biosboot_sda --fstype="biosboot" --ondisk=sda --asprimary --size=1
#part /boot     --fstype="xfs" --ondisk=sda --asprimary --size=1024
# For EFI booting only
#part /boot/efi --fstype="efi" --ondisk=sda --asprimary --size=200
#part pv.01 --ondisk=sda --asprimary --size=100000 --grow --encrypted --passphrase=1234567890


### MIRRORED HD INSTALL:
# Ignore all disks except the intended ones
ignoredisk --only-use=sda,sdb
# Partition clearing information
clearpart --all --initlabel --drives=sda,sdb
# Disk partitioning information
# For BIOS booting only
#part biosboot_sda --fstype="biosboot" --ondisk=sda --asprimary --size=1
#part biosboot_sdb --fstype="biosboot" --ondisk=sdb --asprimary --size=1
part raid.01 --fstype="mdmember" --ondisk=sda --asprimary --size=1024
part raid.02 --fstype="mdmember" --ondisk=sdb --asprimary --size=1024
part raid.11 --fstype="mdmember" --ondisk=sda --asprimary --size=256
part raid.12 --fstype="mdmember" --ondisk=sdb --asprimary --size=256
part raid.21 --fstype="mdmember" --ondisk=sda --asprimary --size=200000
part raid.22 --fstype="mdmember" --ondisk=sdb --asprimary --size=200000
part raid.31 --fstype="mdmember" --ondisk=sda --asprimary --size=100000 --grow
part raid.32 --fstype="mdmember" --ondisk=sdb --asprimary --size=100000 --grow
raid /boot --device=boot --fstype="ext4" --level=1 raid.01 raid.02
raid /boot/efi --device=boot_efi --fstype="efi" --level=1 --fsoptions="umask=0077,shortname=winnt" raid.11 raid.12
raid pv.01 --device=md1 --level=1 raid.21 raid.22 --encrypted --passphrase=1234567890
raid pv.02 --device=md2 --level=1 raid.31 raid.32

### Logical Volume information:
volgroup ovhsvg --pesize=4096 pv.01 --reserved-percent=20
# create thick volumes:
logvol swap           --vgname=ovhsvg --fstype="swap" --size=16136 --name=swap
logvol /              --vgname=ovhsvg --fstype="ext4" --size=30000 --name=root
logvol /var           --vgname=ovhsvg --fstype="ext4" --size=20000 --name=var
logvol /var/crash     --vgname=ovhsvg --fstype="ext4" --size=10000 --name=var_crash
logvol /var/log       --vgname=ovhsvg --fstype="ext4" --size=8000  --name=var_log
logvol /var/log/audit --vgname=ovhsvg --fstype="ext4" --size=2000  --name=var_audit
logvol /home          --vgname=ovhsvg --fstype="ext4" --size=10000 --name=home
logvol /tmp           --vgname=ovhsvg --fstype="ext4" --size=2000  --name=tmp

# create above volumes as thin volumes:
#logvol none            --vgname=ovhsvg --name=lvThinPool --thinpool --metadatasize=16000 --size=120000 --grow
#logvol /               --vgname=ovhsvg --fstype="ext4" --thin --poolname=lvThinPool --fsoptions="defaults,discard" --size=30000 --name=root
#logvol /var            --vgname=ovhsvg --fstype="ext4" --thin --poolname=lvThinPool --fsoptions="defaults,discard" --size=20000 --name=var
#logvol /var/crash      --vgname=ovhsvg --fstype="ext4" --thin --poolname=lvThinPool --fsoptions="defaults,discard" --size=10000 --name=var_crash
#logvol /var/log        --vgname=ovhsvg --fstype="ext4" --thin --poolname=lvThinPool --fsoptions="defaults,discard" --size=8000  --name=var_log
#logvol /var/log/audit  --vgname=ovhsvg --fstype="ext4" --thin --poolname=lvThinPool --fsoptions="defaults,discard" --size=2000  --name=var_audit
#logvol /home           --vgname=ovhsvg --fstype="ext4" --thin --poolname=lvThinPool --fsoptions="defaults,discard" --size=10000 --name=home
#logvol /tmp            --vgname=ovhsvg --fstype="ext4" --thin --poolname=lvThinPool --fsoptions="defaults,discard" --size=2000  --name=tmp

# Base Software installation:
%packages
@base
@core
@network-file-system-client
#@container-management
#@headless-management
#@remote-system-management
#@system-tools
#@^virtualization-host-environment
#@virtualization-hypervisor
#@virtualization-platform
#@virtualization-tools
chrony
#cockpit-machines
cockpit
cockpit-bridge
cockpit-system
cockpit-ws
#deltarpm
#screen
nfs-utils
system-storage-manager
ctdb
#git
vim

%end
###

# self-hosted engine setup with gluster storage taken from
# http://community.redhat.com/blog/2014/10/up-and-running-with-ovirt-3-5/ and
# http://community.redhat.com/blog/2014/11/up-and-running-with-ovirt-3-5-part-two/
%post 
# multipathd throws ugly errors, thus we blacklist the harddisks
#cat >> /etc/multipath.conf <<EOF
#
#blacklist {
#       devnode "^sd[a-b]"
#}
#EOF

# configure nested virtualization for the host
grep -i "^model.*intel" /proc/cpuinfo && /usr/bin/sed -i "s/^#\(options kvm_intel nested=1.*\)/\1/" /etc/modprobe.d/kvm.conf
grep -i "^model.*amd" /proc/cpuinfo && /usr/bin/sed -i "s/^#\(options kvm_amd nested=1.*\)/\1/" /etc/modprobe.d/kvm.conf

# update installation
#yum -y install epel-release
#/bin/yum -y install http://resources.ovirt.org/pub/yum-repo/ovirt-release-master.rpm
#/bin/yum -y install http://resources.ovirt.org/pub/yum-repo/ovirt-release43.rpm
#/bin/yum -y install gdeploy cockpit-ovirt-dashboard vdsm-gluster ovirt-engine-appliance #ansible git
yum -y update
systemctl enable cockpit.socket
%end
###

# copy CentOS ISO image to /home/tmp/ for later re-use
%post --nochroot
mkdir -p /mnt/sysimage/home/tmp
#dd if=$(df | grep "/run/install" | head -n1 | cut -d" " -f1) of=/mnt/sysimage/home/tmp/CentOS-8-x86_64-DVD.iso bs=4M
%end

# automatically start oVirtHomeServer installation via ansible [deactivated]
%post
#ansible-pull -U https://github.com/joschro/ovhs.git
/bin/curl -o /root/run-ovhs_ansible_install.sh https://raw.githubusercontent.com/joschro/ovhs/master/run-ovhs_ansible_install.sh
%end

reboot
